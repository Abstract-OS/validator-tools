---
- name: install apt packages
  apt:
    name: '{{item}}'
    state: present
    update_cache: yes
  loop:
    - make
    - build-essential
    - gcc
    - git
    - jq
    - chrony

- name: Download go
  get_url:
    url: 'https://golang.org/dl/go{{ go_version }}.linux-amd64.tar.gz'
    dest: '/tmp/go{{ go_version }}.linux-amd64.tar.gz'
    mode: '0700'

- name: unarchive go
  unarchive:
    src: '/tmp/go{{ go_version }}.linux-amd64.tar.gz'
    remote_src: yes
    dest: '/usr/local/'
    owner: root
    group: root
    mode: '0755'
- name: Clone a github repository
  git:
    repo: https://github.com/cosmos/cosmos-sdk.git
    dest: '{{ user_dir }}/cosmos-sdk/'
    clone: yes
    update: yes
    version: 'cosmovisor/{{ cosmovisor_version }}'

- name: Creates directory
  file:
    path: '{{ user_dir }}/go/bin'
    state: directory

- name: Install cosmovisor
  command: '{{ item }}'
  args:
    chdir: '{{ user_dir }}/cosmos-sdk/cosmovisor'
  with_items:
    - make cosmovisor
    - cp cosmovisor {{ user_dir }}/go/bin/cosmovisor
  environment:
    PATH: '{{ path }}'
    GOPATH: '{{ user_dir }}/go'

- name: Change go folder permission
  file:
    path: '{{ user_dir }}/go'
    owner: '{{ ansible_user }}'
    group: '{{ ansible_user }}'
    recurse: true
    mode: '0755'

- name: copy .profile
  template:
    src: 'profile.j2'
    dest: '{{ user_dir }}/.profile'
    owner: '{{ ansible_user }}'
    group: '{{ ansible_user }}'
    mode: '0600'

- name: Add DAEMON_NAME line in .profile
  lineinfile:
    path: '{{ user_dir }}/.profile'
    regexp: 'export DAEMON_NAME='
    line: 'export DAEMON_NAME={{ daemon }}'
    state: present
  when: daemon is defined

- name: Add DAEMON_HOME line in .profile
  lineinfile:
    path: '{{ user_dir }}/.profile'
    regexp: 'export DAEMON_HOME='
    line: 'export DAEMON_HOME=$HOME/{{ folder }}'
    state: present
  when: folder is defined
